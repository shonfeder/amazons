* Tutorial
** Getting Tuareg and Merlin working correctly

   Tooling-wise, the OCaml ecosystem is currently in an awkward state. The
   tooling available is relatively powerful, feature rich, compact, and
   coherent, but the setup can be finicky and requires a lot of manual
   maintenance. These are some tips for coaxing the tooling to behave well on
   Eliom projects.

   Assuming you are using ~eliom-distillery~ to get started with a template,
   you'll need to add the following to your ~.merlin~ file to get all the merlin
   goodness:

   #+BEGIN_SRC merlin
   PKG eliom
   PKG eliom.client
   PKG eliom.ppx

   PKG ocsigenserver
   PKG ocsigen-toolkit

   PKG ppx_deriving
   PKG eliom.ppx.server
   PKG eliom.ppx.client

   S _client
   S _server

   B _client
   B _server
   #+END_SRC

*** Gotchas and quirks?

    Merlin was not linting my project correctly due to inconsistencies it was
    detecting. I suspect this was due to some nuance in Eliom's client/server
    scheme uses which was being muddled by the way I was declaring packages to
    merlin in my config file.

    The symptom was merlin throwing error messages like the following at the top
    of my files:

    #+BEGIN_SRC
    The files /Users/sf/.opam/4.04.2/lib/eliom/client/eliom_client_core.cmi
           and /Users/sf/.opam/4.04.2/lib/eliom/server/eliom_lib.cmi
           make inconsistent assumptions over interface Eliom_lib
    #+END_SRC

    I was initially declaring both ~eliom.client~ and ~eliom.server~ packages in
    my ~.merlin~. The solution turned out to be removing the ~elimo.server~
    package from my ~.merlin~ file. This seemed to provide everything I needed
    to lint my files, without generating the inconsistency error.

** How to add package dependencies
   - Add these to your ~.merlin~
   - Add them to the ~SERVER_PACKAGES~ and ~CLIENT_PACKAGES~ variables in the
     ~Makefile.options~ as needed.
     - *Note*: The order of these files matters? :( You have to list them
       so that modules come after the modules they depend on.
** How to add ~*.ml~ modules
   - Add these to your ~.merlin~
   - Add them to the ~SERVER_FILES~ and ~CLIENT_FILES~ variables in the
     ~Makefile.options~ as needed.

* Trials and Tribulations
** Resolving chicken and egg service problems with mutual recursion
*** TODO Document how I was able to work around the  menu/services problem with mutually recursive thunks
** Missing Primitives
   Ongoing problem with pending issue: https://github.com/issues
*** TODO Explain what causes this and how to solve it
** Problems with client-side injection
   See https://github.com/ocsigen/eliom/issues/506
*** TODO Make an fresh isolated study of client-side code
    Play with this to see exactly what is going on and figure out how to break it.
